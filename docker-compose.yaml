version: "3"

services:
  ##Gerenciador
  dev-gerenciador-processos:
    # logging:
    #   driver: none
    build:
      context: ./
    container_name: dev-gerenciador-processos
    user: root
    ports:
      - 6000:3000
    #entrypoint: dockerize -wait tcp://apm:8200 -timeout 20s docker-entrypoint.sh npm run pm2-start
    entrypoint: npm run pm2-start
    volumes:
      - .:/usr/src/app
    environment:
      TZ: America/Sao_Paulo
    # depends_on:
    #   - apm
    networks:
      - observability
    tty: true

#   ##Elasticsearch
#   elasticsearch:
#     image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
#     container_name: elasticsearch
#     environment:
#       - node.name=elasticsearch
#       - cluster.name=es-docker-cluster
#       - bootstrap.memory_lock=true
#       - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#       - http.cors.enabled=true
#       - http.cors.allow-origin="*"
#       - discovery.type=single-node
#     ulimits:
#       memlock:
#         soft: -1
#         hard: -1
#     volumes:
#       - elasticsearch-data:/usr/share/elasticsearch/data
#     restart: on-failure
#     ports:
#       - 9200:9200
#     networks:
#       - observability

#   ##Dashboards e gerenciador do Elasticsearch
#   kibana:
#     image: docker.elastic.co/kibana/kibana:7.13.0
#     container_name: kibana
#     ports:
#       - 5601:5601
#     depends_on:
#       - elasticsearch
#     environment:
#       ELASTICSEARCH_URL: http://elasticsearch:9200
#       ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
#     restart: on-failure
#     networks:
#       - observability

#   ##Ativar Méticas no Elasticsearch
#   metricbeat:
#     build:
#       context: ./elastic-stack/beats/metric
#     container_name: metricbeat
#     user: root
#     depends_on:
#       - kibana
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#     restart: on-failure
#     networks:
#       - observability

#   ##Ativar gerenciador do estado da aplicação
#   heartbeat:
#     build:
#       context: ./elastic-stack/beats/heartbeat
#     container_name: heartbeat
#     user: root
#     depends_on:
#       - kibana
#     environment:
#       - setup.kibana.host=kibana:5601
#     restart: on-failure
#     networks:
#       - observability

#   #Monitoramento
#   apm:
#     build:
#       context: ./elastic-stack/apm-server
#     container_name: apm
#     user: root
#     depends_on:
#       - kibana
#     ports:
#       - "8200:8200"
#     restart: on-failure
#     networks:
#       - observability

# volumes:
#   elasticsearch-data:
#     external: true

networks:
  observability:
    external: true
